{"uid":"652ca100e8eb5165","name":"Test the GeoNetwork webapp","fullName":"tests.00-georchestra-base.test_georchestra_headers#test_geoserver_wms_no_double_access_control_allow_origin","historyId":"4e12e5606eb1439b1a5f31778192d41d","time":{"start":1741581115320,"stop":1741581115412,"duration":92},"description":"This test attempts to load GeoNetwork.","descriptionHtml":"<p>This test attempts to load GeoNetwork.</p>\n","status":"failed","statusMessage":"AssertionError: There should be only one header with Access-Control-Allow-Origin\nassert '*, https://g...-0-0-1.nip.io' == '*'\n  \n  - *\n  + *, https://georchestra-127-0-0-1.nip.io","statusTrace":"base_url = 'https://georchestra-127-0-0-1.nip.io'\n\n    @allure.epic(\"Geoserver\")\n    @allure.feature(\"Headers\")\n    @allure.description(\"This test attempts to load GeoNetwork.\")\n    @allure.title(\"Test the GeoNetwork webapp\")\n    def test_geoserver_wms_no_double_access_control_allow_origin(base_url: str):\n        url = base_url + \"/geoserver/wms\"\n        headers = {\"Origin\": base_url}\n    \n        response = requests.get(url, headers=headers, verify=False)\n        response.raise_for_status()\n    \n        access_control_allow_origin_header = response.headers.get(\"Access-Control-Allow-Origin\")\n        # If two headers are present (e.g * and *) response.headers.get(\"Access-Control-Allow-Origin\") returns \"*, *\"\n>       assert access_control_allow_origin_header == \"*\", \\\n            \"There should be only one header with Access-Control-Allow-Origin\"\nE       AssertionError: There should be only one header with Access-Control-Allow-Origin\nE       assert '*, https://g...-0-0-1.nip.io' == '*'\nE         \nE         - *\nE         + *, https://georchestra-127-0-0-1.nip.io\n\ntests/00-georchestra-base/test_georchestra_headers.py:34: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1741580739255,"stop":1741580739255,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1741580739256,"stop":1741580739256,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1741580739256,"stop":1741580739256,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1741580739256,"stop":1741580739256,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[],"labels":[{"name":"feature","value":"Headers"},{"name":"epic","value":"Geoserver"},{"name":"parentSuite","value":"tests.00-georchestra-base"},{"name":"suite","value":"test_georchestra_headers"},{"name":"host","value":"fv-az1694-741"},{"name":"thread","value":"16676-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.00-georchestra-base.test_georchestra_headers"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"eddc41310378f562","status":"failed","statusDetails":"AssertionError: There should be only one header with Access-Control-Allow-Origin\nassert '*, https://g...-0-0-1.nip.io' == '*'\n  \n  - *\n  + *, https://georchestra-127-0-0-1.nip.io","time":{"start":1741581115204,"stop":1741581115308,"duration":104}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"e345d915613ee01a","reportUrl":"https://georchestra.github.io/e2e-tests/94//#testresult/e345d915613ee01a","status":"failed","statusDetails":"AssertionError: There should be only one header with Access-Control-Allow-Origin\nassert '*, https://g...-0-0-1.nip.io' == '*'\n  \n  - *\n  + *, https://georchestra-127-0-0-1.nip.io","time":{"start":1741171868652,"stop":1741171868729,"duration":77}},{"uid":"86742c25fab94379","reportUrl":"https://georchestra.github.io/e2e-tests/93//#testresult/86742c25fab94379","status":"failed","statusDetails":"AssertionError: There should be only one header with Access-Control-Allow-Origin\nassert '*, https://g...-0-0-1.nip.io' == '*'\n  \n  - *\n  + *, https://georchestra-127-0-0-1.nip.io","time":{"start":1741170136029,"stop":1741170136107,"duration":78}}]},"tags":[]},"source":"652ca100e8eb5165.json","parameterValues":[]}