{"uid":"52134c38f117140","name":"test_import_shp_datafeeder[chromium]","fullName":"tests.datafeeder.test_ingest_data#test_import_shp_datafeeder","historyId":"a5bfdde5cd0a9b039d7040d631f60f51","time":{"start":1740160779703,"stop":1740160821983,"duration":42280},"description":"This test attempts to load a SHP file through datafeeder and check links.","descriptionHtml":"<p>This test attempts to load a SHP file through datafeeder and check links.</p>\n","status":"broken","statusMessage":"playwright._impl._errors.TimeoutError: Locator.click: Timeout 30000ms exceeded.\nCall log:\n  - waiting for get_by_role(\"button\", name=\"Addresses\")","statusTrace":"page = <Page url='https://georchestra-127-0-0-1.nip.io/import/fa9e27a4-def2-45ad-a533-04d22b6d2c9e/step/2'>\n\n    @allure.epic(\"Datafeeder\")\n    @allure.feature(\"Ingestion\")\n    @allure.story(\"Ingest data in Geonetwork, Geoserver and Data-api\")\n    @allure.description(\"This test attempts to load a SHP file through datafeeder and check links.\")\n    @pytest.mark.skipif(condition=ConfigurationManager.write_tests_disabled(), reason=\"Write tests are disabled\")\n    def test_import_shp_datafeeder(page: Page):\n        login(page)\n        page.goto(\"/import/\")\n        screenshot_page(page, \"datafeeder\")\n        page.locator(\"input#undefined\").first.set_input_files(\"./fixtures/antenne.zip\")\n        page.get_by_role(\"checkbox\").check()\n        page.get_by_role(\"button\", name=\"Upload\").click()\n        page.get_by_role(\"button\", name=\"-\", exact=True).click()\n        page.get_by_role(\"button\", name=\"WGS84\").click()\n        page.get_by_role(\"button\", name=\"WGS84\").click()\n        page.get_by_role(\"button\", name=\"Lambert\").click()\n        page.get_by_role(\"button\", name=\"OK, my data are correct\").click()\n        page.locator(\"input[type=\\\"text\\\"]\").click()\n        page.locator(\"input[type=\\\"text\\\"]\").fill(\"Antennes\")\n        page.locator(\"textarea[name=\\\"textArea\\\"]\").click()\n        page.locator(\"textarea[name=\\\"textArea\\\"]\").fill(\"Awesome\")\n        page.get_by_role(\"button\", name=\"next\").click()\n        page.get_by_role(\"textbox\").fill(\"a\")\n        page.locator(\"#tags div\").nth(1).click()\n>       page.get_by_role(\"button\", name=\"Addresses\").click()\n\ntests/datafeeder/test_ingest_data.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/playwright/sync_api/_generated.py:15464: in click\n    self._sync(\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/playwright/_impl/_locator.py:156: in click\n    return await self._frame.click(self._selector, strict=True, **params)\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/playwright/_impl/_frame.py:488: in click\n    await self._channel.send(\"click\", locals_to_params(locals()))\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/playwright/_impl/_connection.py:61: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._connection.Connection object at 0x7f4b0779d650>\ncb = <function Channel.send.<locals>.<lambda> at 0x7f4b03441a80>\nis_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Locator.click: Timeout 30000ms exceeded.\nE           Call log:\nE             - waiting for get_by_role(\"button\", name=\"Addresses\")\n\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/playwright/_impl/_connection.py:528: TimeoutError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1740160571254,"stop":1740160571254,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1740160571255,"stop":1740160571255,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1740160571255,"stop":1740160571255,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1740160571255,"stop":1740160571255,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"playwright","time":{"start":1740160571256,"stop":1740160571794,"duration":538},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"browser_type_launch_args","time":{"start":1740160571256,"stop":1740160571256,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"browser_type","time":{"start":1740160571794,"stop":1740160571795,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"browser","time":{"start":1740160571795,"stop":1740160572389,"duration":594},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"connect_options","time":{"start":1740160571795,"stop":1740160571795,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"launch_browser","time":{"start":1740160571795,"stop":1740160571795,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"browser_context_args","time":{"start":1740160572389,"stop":1740160572389,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"browser_context_args","time":{"start":1740160572389,"stop":1740160572389,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_pw_artifacts_folder","time":{"start":1740160572389,"stop":1740160572389,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"device","time":{"start":1740160572389,"stop":1740160572389,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_artifacts_recorder","time":{"start":1740160779597,"stop":1740160779598,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"output_path","time":{"start":1740160779597,"stop":1740160779597,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"context","time":{"start":1740160779598,"stop":1740160779629,"duration":31},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"new_context","time":{"start":1740160779598,"stop":1740160779598,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"page","time":{"start":1740160779629,"stop":1740160779702,"duration":73},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"This test attempts to load a SHP file through datafeeder and check links.","status":"broken","statusMessage":"playwright._impl._errors.TimeoutError: Locator.click: Timeout 30000ms exceeded.\nCall log:\n  - waiting for get_by_role(\"button\", name=\"Addresses\")","statusTrace":"page = <Page url='https://georchestra-127-0-0-1.nip.io/import/fa9e27a4-def2-45ad-a533-04d22b6d2c9e/step/2'>\n\n    @allure.epic(\"Datafeeder\")\n    @allure.feature(\"Ingestion\")\n    @allure.story(\"Ingest data in Geonetwork, Geoserver and Data-api\")\n    @allure.description(\"This test attempts to load a SHP file through datafeeder and check links.\")\n    @pytest.mark.skipif(condition=ConfigurationManager.write_tests_disabled(), reason=\"Write tests are disabled\")\n    def test_import_shp_datafeeder(page: Page):\n        login(page)\n        page.goto(\"/import/\")\n        screenshot_page(page, \"datafeeder\")\n        page.locator(\"input#undefined\").first.set_input_files(\"./fixtures/antenne.zip\")\n        page.get_by_role(\"checkbox\").check()\n        page.get_by_role(\"button\", name=\"Upload\").click()\n        page.get_by_role(\"button\", name=\"-\", exact=True).click()\n        page.get_by_role(\"button\", name=\"WGS84\").click()\n        page.get_by_role(\"button\", name=\"WGS84\").click()\n        page.get_by_role(\"button\", name=\"Lambert\").click()\n        page.get_by_role(\"button\", name=\"OK, my data are correct\").click()\n        page.locator(\"input[type=\\\"text\\\"]\").click()\n        page.locator(\"input[type=\\\"text\\\"]\").fill(\"Antennes\")\n        page.locator(\"textarea[name=\\\"textArea\\\"]\").click()\n        page.locator(\"textarea[name=\\\"textArea\\\"]\").fill(\"Awesome\")\n        page.get_by_role(\"button\", name=\"next\").click()\n        page.get_by_role(\"textbox\").fill(\"a\")\n        page.locator(\"#tags div\").nth(1).click()\n>       page.get_by_role(\"button\", name=\"Addresses\").click()\n\ntests/datafeeder/test_ingest_data.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/playwright/sync_api/_generated.py:15464: in click\n    self._sync(\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/playwright/_impl/_locator.py:156: in click\n    return await self._frame.click(self._selector, strict=True, **params)\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/playwright/_impl/_frame.py:488: in click\n    await self._channel.send(\"click\", locals_to_params(locals()))\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/playwright/_impl/_connection.py:61: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._connection.Connection object at 0x7f4b0779d650>\ncb = <function Channel.send.<locals>.<lambda> at 0x7f4b03441a80>\nis_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Locator.click: Timeout 30000ms exceeded.\nE           Call log:\nE             - waiting for get_by_role(\"button\", name=\"Addresses\")\n\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/playwright/_impl/_connection.py:528: TimeoutError","steps":[],"attachments":[{"uid":"973385575a1fd3e9","name":"datafeeder","source":"973385575a1fd3e9.png","type":"image/png","size":259316}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"new_context::0","time":{"start":1740160822191,"stop":1740160822984,"duration":793},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_artifacts_recorder::0","time":{"start":1740160822985,"stop":1740160822985,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_pw_artifacts_folder::0","time":{"start":1740160822990,"stop":1740160822990,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"browser::0","time":{"start":1740160822991,"stop":1740160823130,"duration":139},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"playwright::0","time":{"start":1740160823132,"stop":1740160823146,"duration":14},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"story","value":"Ingest data in Geonetwork, Geoserver and Data-api"},{"name":"epic","value":"Datafeeder"},{"name":"feature","value":"Ingestion"},{"name":"tag","value":"@pytest.mark.skipif(condition=False, reason='Write tests are disabled')"},{"name":"parentSuite","value":"tests.datafeeder"},{"name":"suite","value":"test_ingest_data"},{"name":"host","value":"fv-az1391-238"},{"name":"thread","value":"16805-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.datafeeder.test_ingest_data"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"browser_name","value":"'chromium'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":2,"unknown":0,"total":3},"items":[{"uid":"cce7d7482e5efcd5","reportUrl":"https://georchestra.github.io/e2e-tests/84//#testresult/cce7d7482e5efcd5","status":"passed","time":{"start":1740159622905,"stop":1740159666774,"duration":43869}},{"uid":"2a38c6ad2e5d4c6","reportUrl":"https://georchestra.github.io/e2e-tests/82//#testresult/2a38c6ad2e5d4c6","status":"passed","time":{"start":1740157920153,"stop":1740157963358,"duration":43205}}]},"tags":["@pytest.mark.skipif(condition=False, reason='Write tests are disabled')"]},"source":"52134c38f117140.json","parameterValues":["'chromium'"]}