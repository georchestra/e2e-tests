{"uid":"eeeec5bdcebd6364","name":"test_import_shp_datafeeder[chromium]","fullName":"tests.datafeeder.test_ingest_data#test_import_shp_datafeeder","historyId":"a5bfdde5cd0a9b039d7040d631f60f51","time":{"start":1741103156136,"stop":1741103186246,"duration":30110},"description":"This test attempts to load a SHP file through datafeeder and check links.","descriptionHtml":"<p>This test attempts to load a SHP file through datafeeder and check links.</p>\n","status":"broken","statusMessage":"playwright._impl._errors.TimeoutError: Locator.click: Timeout 30000ms exceeded.\nCall log:\n  - waiting for get_by_role(\"link\", name=\"login\")","statusTrace":"page = <Page url='https://georchestra-127-0-0-1.nip.io/datahub/'>\n\n    @allure.epic(\"Datafeeder\")\n    @allure.feature(\"Ingestion\")\n    @allure.story(\"Ingest data in Geonetwork, Geoserver and Data-api\")\n    @allure.description(\"This test attempts to load a SHP file through datafeeder and check links.\")\n    @pytest.mark.skipif(condition=ConfigurationManager.write_tests_disabled(), reason=\"Write tests are disabled\")\n    def test_import_shp_datafeeder(page: Page):\n>       login(page)\n\ntests/datafeeder/test_ingest_data.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/common.py:18: in login\n    page.get_by_role(\"link\", name=\"login\").click()\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/playwright/sync_api/_generated.py:15464: in click\n    self._sync(\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/playwright/_impl/_locator.py:156: in click\n    return await self._frame.click(self._selector, strict=True, **params)\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/playwright/_impl/_frame.py:488: in click\n    await self._channel.send(\"click\", locals_to_params(locals()))\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/playwright/_impl/_connection.py:61: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._connection.Connection object at 0x7fb4b46be6d0>\ncb = <function Channel.send.<locals>.<lambda> at 0x7fb4b3019d00>\nis_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Locator.click: Timeout 30000ms exceeded.\nE           Call log:\nE             - waiting for get_by_role(\"link\", name=\"login\")\n\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/playwright/_impl/_connection.py:528: TimeoutError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"base_url","time":{"start":1741102765471,"stop":1741102765471,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"pytestconfig","time":{"start":1741102765471,"stop":1741102765471,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"_verify_url","time":{"start":1741102765471,"stop":1741102765471,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"delete_output_dir","time":{"start":1741102765471,"stop":1741102765471,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"playwright","time":{"start":1741102765472,"stop":1741102766260,"duration":788},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"browser_type_launch_args","time":{"start":1741102765472,"stop":1741102765472,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"browser_type","time":{"start":1741102766261,"stop":1741102766261,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"launch_browser","time":{"start":1741102766261,"stop":1741102766261,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"connect_options","time":{"start":1741102766261,"stop":1741102766261,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"browser","time":{"start":1741102766261,"stop":1741102767060,"duration":799},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"_pw_artifacts_folder","time":{"start":1741102767060,"stop":1741102767061,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"device","time":{"start":1741102767060,"stop":1741102767060,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"browser_context_args","time":{"start":1741102767061,"stop":1741102767061,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"browser_context_args","time":{"start":1741102767061,"stop":1741102767061,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"new_context","time":{"start":1741103156086,"stop":1741103156086,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"_artifacts_recorder","time":{"start":1741103156086,"stop":1741103156086,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"output_path","time":{"start":1741103156086,"stop":1741103156086,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"context","time":{"start":1741103156086,"stop":1741103156099,"duration":13},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"page","time":{"start":1741103156099,"stop":1741103156135,"duration":36},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0}],"afterStages":[{"name":"new_context::0","time":{"start":1741103186387,"stop":1741103186422,"duration":35},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"_artifacts_recorder::0","time":{"start":1741103186422,"stop":1741103186425,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"_pw_artifacts_folder::0","time":{"start":1741103186426,"stop":1741103186426,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"browser::0","time":{"start":1741103186427,"stop":1741103186499,"duration":72},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"playwright::0","time":{"start":1741103186502,"stop":1741103186522,"duration":20},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0}],"labels":[{"name":"feature","value":"Ingestion"},{"name":"epic","value":"Datafeeder"},{"name":"story","value":"Ingest data in Geonetwork, Geoserver and Data-api"},{"name":"tag","value":"@pytest.mark.skipif(condition=False, reason='Write tests are disabled')"},{"name":"parentSuite","value":"tests.datafeeder"},{"name":"suite","value":"test_ingest_data"},{"name":"host","value":"fv-az1333-830"},{"name":"thread","value":"16662-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.datafeeder.test_ingest_data"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"browser_name","value":"'chromium'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"3093d3c5fa083935","status":"failed","statusDetails":"AssertionError: Locator expected to be visible\nActual value: <element(s) not found> \nCall log:\n  - LocatorAssertions.to_be_visible with timeout 5000ms\n  -   - waiting for locator(\"pre\")","time":{"start":1741103108597,"stop":1741103155031,"duration":46434}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":3,"skipped":0,"passed":4,"unknown":0,"total":8},"items":[{"uid":"511f0ec5ecb70f81","reportUrl":"https://georchestra.github.io/e2e-tests/89//#testresult/511f0ec5ecb70f81","status":"failed","statusDetails":"AssertionError: Locator expected to be visible\nActual value: <element(s) not found> \nCall log:\n  - LocatorAssertions.to_be_visible with timeout 45000ms\n  -   - waiting for get_by_role(\"button\", name=\"Metadata record\")","time":{"start":1740976558297,"stop":1740976611054,"duration":52757}},{"uid":"e6b9e4eda4bf6da9","reportUrl":"https://georchestra.github.io/e2e-tests/88//#testresult/e6b9e4eda4bf6da9","status":"broken","statusDetails":"playwright._impl._errors.TimeoutError: Locator.click: Timeout 30000ms exceeded.\nCall log:\n  - waiting for get_by_role(\"button\", name=\"-\", exact=True)","time":{"start":1740371743036,"stop":1740371776185,"duration":33149}},{"uid":"ac213df401a4d151","reportUrl":"https://georchestra.github.io/e2e-tests/87//#testresult/ac213df401a4d151","status":"passed","time":{"start":1740162853461,"stop":1740162894428,"duration":40967}},{"uid":"7fe8d815f87b4269","reportUrl":"https://georchestra.github.io/e2e-tests/86//#testresult/7fe8d815f87b4269","status":"passed","time":{"start":1740161801331,"stop":1740161843754,"duration":42423}},{"uid":"52134c38f117140","reportUrl":"https://georchestra.github.io/e2e-tests/85//#testresult/52134c38f117140","status":"broken","statusDetails":"playwright._impl._errors.TimeoutError: Locator.click: Timeout 30000ms exceeded.\nCall log:\n  - waiting for get_by_role(\"button\", name=\"Addresses\")","time":{"start":1740160779703,"stop":1740160821983,"duration":42280}},{"uid":"cce7d7482e5efcd5","reportUrl":"https://georchestra.github.io/e2e-tests/84//#testresult/cce7d7482e5efcd5","status":"passed","time":{"start":1740159622905,"stop":1740159666774,"duration":43869}},{"uid":"2a38c6ad2e5d4c6","reportUrl":"https://georchestra.github.io/e2e-tests/82//#testresult/2a38c6ad2e5d4c6","status":"passed","time":{"start":1740157920153,"stop":1740157963358,"duration":43205}}]},"tags":["@pytest.mark.skipif(condition=False, reason='Write tests are disabled')"]},"source":"eeeec5bdcebd6364.json","parameterValues":["'chromium'"]}