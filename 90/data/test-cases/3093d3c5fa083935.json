{"uid":"3093d3c5fa083935","name":"test_import_shp_datafeeder[chromium]","fullName":"tests.datafeeder.test_ingest_data#test_import_shp_datafeeder","historyId":"a5bfdde5cd0a9b039d7040d631f60f51","time":{"start":1741103108597,"stop":1741103155031,"duration":46434},"description":"This test attempts to load a SHP file through datafeeder and check links.","descriptionHtml":"<p>This test attempts to load a SHP file through datafeeder and check links.</p>\n","status":"failed","statusMessage":"AssertionError: Locator expected to be visible\nActual value: <element(s) not found> \nCall log:\n  - LocatorAssertions.to_be_visible with timeout 5000ms\n  -   - waiting for locator(\"pre\")","statusTrace":"page = <Page url='https://georchestra-127-0-0-1.nip.io/import/c5175629-ecf4-4493-9698-832089b6cbce/publishok'>\n\n    @allure.epic(\"Datafeeder\")\n    @allure.feature(\"Ingestion\")\n    @allure.story(\"Ingest data in Geonetwork, Geoserver and Data-api\")\n    @allure.description(\"This test attempts to load a SHP file through datafeeder and check links.\")\n    @pytest.mark.skipif(condition=ConfigurationManager.write_tests_disabled(), reason=\"Write tests are disabled\")\n    def test_import_shp_datafeeder(page: Page):\n        login(page)\n        page.goto(\"/import/\")\n        screenshot_page(page, \"datafeeder\")\n        page.locator(\"input#undefined\").first.set_input_files(\"./fixtures/antenne.zip\")\n        page.get_by_role(\"checkbox\").check()\n        page.get_by_role(\"button\", name=\"Upload\").click()\n        page.get_by_role(\"button\", name=\"-\", exact=True).click()\n        page.get_by_role(\"button\", name=\"WGS84\").click()\n        page.get_by_role(\"button\", name=\"WGS84\").click()\n        page.get_by_role(\"button\", name=\"Lambert\").click()\n        page.get_by_role(\"button\", name=\"OK, my data are correct\").click()\n        page.locator(\"input[type=\\\"text\\\"]\").click()\n        page.locator(\"input[type=\\\"text\\\"]\").fill(\"Antennes\")\n        page.locator(\"textarea[name=\\\"textArea\\\"]\").click()\n        page.locator(\"textarea[name=\\\"textArea\\\"]\").fill(\"Awesome\")\n        page.get_by_role(\"button\", name=\"next\").click()\n        page.get_by_role(\"textbox\").fill(\"a\")\n        page.locator(\"#tags div\").nth(1).click()\n        page.get_by_role(\"button\", name=\"Addresses\").click()\n        page.get_by_role(\"button\", name=\"next\").click()\n        page.get_by_role(\"button\", name=\"next\").click()\n        page.get_by_role(\"textbox\").click()\n        page.get_by_role(\"textbox\").fill(\"This is the process\")\n        page.get_by_role(\"button\", name=\"next\").click()\n        page.get_by_role(\"button\", name=\"Submit\").click()\n        screenshot_page(page, \"after-submit-click\")\n        # wait for the data to be ingested\n        expect(page.get_by_role(\"button\", name=\"Metadata record\")).to_be_visible(timeout=45000)\n        screenshot_page(page, \"after-ingestion\")\n        expect(page.get_by_role(\"button\", name=\"Map viewer\")).to_be_visible()\n        with page.expect_popup() as page1_info:\n            page.get_by_role(\"button\", name=\"Metadata record\").click()\n        page1 = page1_info.value\n        page.wait_for_timeout(10000)\n        screenshot_page(page1, \"metadata\")\n        expect(page1.get_by_text(\"Awesome\").first).to_be_visible()\n        expect(page1.get_by_text(\"Antennes - WMS\")).to_be_visible()\n        page1.close()\n        with page.expect_popup() as page2_info:\n            page.get_by_role(\"button\", name=\"Map viewer\").click()\n        page2 = page2_info.value\n        screenshot_page(page2, \"mapviewer\")\n        expect(page2.locator(\"canvas\")).to_be_visible()\n        page2.close()\n        with page.expect_popup() as page3_info:\n            page.get_by_role(\"button\", name=\"OGC API\").click()\n        page3 = page3_info.value\n        page3_url = page3_info.value.url\n        screenshot_page(page3, \"ogcapi\")\n>       expect(page3.locator(\"pre\")).to_be_visible()\nE       AssertionError: Locator expected to be visible\nE       Actual value: <element(s) not found> \nE       Call log:\nE         - LocatorAssertions.to_be_visible with timeout 5000ms\nE         -   - waiting for locator(\"pre\")\n\ntests/datafeeder/test_ingest_data.py:64: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1741102765471,"stop":1741102765471,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"pytestconfig","time":{"start":1741102765471,"stop":1741102765471,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"_verify_url","time":{"start":1741102765471,"stop":1741102765471,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"delete_output_dir","time":{"start":1741102765471,"stop":1741102765471,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"playwright","time":{"start":1741102765472,"stop":1741102766260,"duration":788},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"browser_type_launch_args","time":{"start":1741102765472,"stop":1741102765472,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"browser_type","time":{"start":1741102766261,"stop":1741102766261,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"launch_browser","time":{"start":1741102766261,"stop":1741102766261,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"connect_options","time":{"start":1741102766261,"stop":1741102766261,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"browser","time":{"start":1741102766261,"stop":1741102767060,"duration":799},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"_pw_artifacts_folder","time":{"start":1741102767060,"stop":1741102767061,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"device","time":{"start":1741102767060,"stop":1741102767060,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"browser_context_args","time":{"start":1741102767061,"stop":1741102767061,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"browser_context_args","time":{"start":1741102767061,"stop":1741102767061,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"new_context","time":{"start":1741103108536,"stop":1741103108536,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"output_path","time":{"start":1741103108536,"stop":1741103108536,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"context","time":{"start":1741103108536,"stop":1741103108556,"duration":20},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"_artifacts_recorder","time":{"start":1741103108536,"stop":1741103108536,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"page","time":{"start":1741103108556,"stop":1741103108596,"duration":40},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0}],"testStage":{"description":"This test attempts to load a SHP file through datafeeder and check links.","status":"failed","statusMessage":"AssertionError: Locator expected to be visible\nActual value: <element(s) not found> \nCall log:\n  - LocatorAssertions.to_be_visible with timeout 5000ms\n  -   - waiting for locator(\"pre\")","statusTrace":"page = <Page url='https://georchestra-127-0-0-1.nip.io/import/c5175629-ecf4-4493-9698-832089b6cbce/publishok'>\n\n    @allure.epic(\"Datafeeder\")\n    @allure.feature(\"Ingestion\")\n    @allure.story(\"Ingest data in Geonetwork, Geoserver and Data-api\")\n    @allure.description(\"This test attempts to load a SHP file through datafeeder and check links.\")\n    @pytest.mark.skipif(condition=ConfigurationManager.write_tests_disabled(), reason=\"Write tests are disabled\")\n    def test_import_shp_datafeeder(page: Page):\n        login(page)\n        page.goto(\"/import/\")\n        screenshot_page(page, \"datafeeder\")\n        page.locator(\"input#undefined\").first.set_input_files(\"./fixtures/antenne.zip\")\n        page.get_by_role(\"checkbox\").check()\n        page.get_by_role(\"button\", name=\"Upload\").click()\n        page.get_by_role(\"button\", name=\"-\", exact=True).click()\n        page.get_by_role(\"button\", name=\"WGS84\").click()\n        page.get_by_role(\"button\", name=\"WGS84\").click()\n        page.get_by_role(\"button\", name=\"Lambert\").click()\n        page.get_by_role(\"button\", name=\"OK, my data are correct\").click()\n        page.locator(\"input[type=\\\"text\\\"]\").click()\n        page.locator(\"input[type=\\\"text\\\"]\").fill(\"Antennes\")\n        page.locator(\"textarea[name=\\\"textArea\\\"]\").click()\n        page.locator(\"textarea[name=\\\"textArea\\\"]\").fill(\"Awesome\")\n        page.get_by_role(\"button\", name=\"next\").click()\n        page.get_by_role(\"textbox\").fill(\"a\")\n        page.locator(\"#tags div\").nth(1).click()\n        page.get_by_role(\"button\", name=\"Addresses\").click()\n        page.get_by_role(\"button\", name=\"next\").click()\n        page.get_by_role(\"button\", name=\"next\").click()\n        page.get_by_role(\"textbox\").click()\n        page.get_by_role(\"textbox\").fill(\"This is the process\")\n        page.get_by_role(\"button\", name=\"next\").click()\n        page.get_by_role(\"button\", name=\"Submit\").click()\n        screenshot_page(page, \"after-submit-click\")\n        # wait for the data to be ingested\n        expect(page.get_by_role(\"button\", name=\"Metadata record\")).to_be_visible(timeout=45000)\n        screenshot_page(page, \"after-ingestion\")\n        expect(page.get_by_role(\"button\", name=\"Map viewer\")).to_be_visible()\n        with page.expect_popup() as page1_info:\n            page.get_by_role(\"button\", name=\"Metadata record\").click()\n        page1 = page1_info.value\n        page.wait_for_timeout(10000)\n        screenshot_page(page1, \"metadata\")\n        expect(page1.get_by_text(\"Awesome\").first).to_be_visible()\n        expect(page1.get_by_text(\"Antennes - WMS\")).to_be_visible()\n        page1.close()\n        with page.expect_popup() as page2_info:\n            page.get_by_role(\"button\", name=\"Map viewer\").click()\n        page2 = page2_info.value\n        screenshot_page(page2, \"mapviewer\")\n        expect(page2.locator(\"canvas\")).to_be_visible()\n        page2.close()\n        with page.expect_popup() as page3_info:\n            page.get_by_role(\"button\", name=\"OGC API\").click()\n        page3 = page3_info.value\n        page3_url = page3_info.value.url\n        screenshot_page(page3, \"ogcapi\")\n>       expect(page3.locator(\"pre\")).to_be_visible()\nE       AssertionError: Locator expected to be visible\nE       Actual value: <element(s) not found> \nE       Call log:\nE         - LocatorAssertions.to_be_visible with timeout 5000ms\nE         -   - waiting for locator(\"pre\")\n\ntests/datafeeder/test_ingest_data.py:64: AssertionError","steps":[],"attachments":[{"uid":"dcf58899ba7e2042","name":"datafeeder","source":"dcf58899ba7e2042.png","type":"image/png","size":259316},{"uid":"bcb9c1a4a491495a","name":"after-submit-click","source":"bcb9c1a4a491495a.png","type":"image/png","size":321149},{"uid":"a93a4e91c6531165","name":"after-ingestion","source":"a93a4e91c6531165.png","type":"image/png","size":77940},{"uid":"2fe19c9104ccd1da","name":"metadata","source":"2fe19c9104ccd1da.png","type":"image/png","size":443632},{"uid":"cb6acb72b8905011","name":"mapviewer","source":"cb6acb72b8905011.png","type":"image/png","size":4935},{"uid":"9c7dbc8876e990fe","name":"ogcapi","source":"9c7dbc8876e990fe.png","type":"image/png","size":36209}],"parameters":[],"hasContent":true,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":6},"afterStages":[{"name":"new_context::0","time":{"start":1741103155041,"stop":1741103156082,"duration":1041},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"_artifacts_recorder::0","time":{"start":1741103156082,"stop":1741103156082,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"_pw_artifacts_folder::0","time":{"start":1741103186426,"stop":1741103186426,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"browser::0","time":{"start":1741103186427,"stop":1741103186499,"duration":72},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"playwright::0","time":{"start":1741103186502,"stop":1741103186522,"duration":20},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0}],"labels":[{"name":"feature","value":"Ingestion"},{"name":"epic","value":"Datafeeder"},{"name":"story","value":"Ingest data in Geonetwork, Geoserver and Data-api"},{"name":"tag","value":"@pytest.mark.skipif(condition=False, reason='Write tests are disabled')"},{"name":"parentSuite","value":"tests.datafeeder"},{"name":"suite","value":"test_ingest_data"},{"name":"host","value":"fv-az1333-830"},{"name":"thread","value":"16662-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.datafeeder.test_ingest_data"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"browser_name","value":"'chromium'"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["@pytest.mark.skipif(condition=False, reason='Write tests are disabled')"]},"source":"3093d3c5fa083935.json","parameterValues":["'chromium'"]}