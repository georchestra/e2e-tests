{"uid":"8f0d2762c1392488","name":"Test the data-api headers","fullName":"tests.00-georchestra-base.test_georchestra_headers#test_data_api_no_double_access_control_allow_origin","historyId":"5937039afcc24bd0f2f802f023ca9b9e","time":{"start":1745930809547,"stop":1745930809624,"duration":77},"description":"Test if data-api response headers contains only one Access-Control-Allow-Origin header.","descriptionHtml":"<p>Test if data-api response headers contains only one Access-Control-Allow-Origin header.</p>\n","status":"failed","statusMessage":"AssertionError: There should be only one header with Access-Control-Allow-Origin\nassert None == '*'","statusTrace":"base_url = 'https://georchestra-127-0-0-1.nip.io'\n\n    @allure.epic(\"Data API\")\n    @allure.feature(\"Headers\")\n    @allure.description(\"Test if data-api response headers contains only one Access-Control-Allow-Origin header.\")\n    @allure.title(\"Test the data-api headers\")\n    def test_data_api_no_double_access_control_allow_origin(base_url):\n        url = base_url + \"/data/ogcapi/\"\n        headers = {\"Origin\": base_url}\n    \n        response = requests.get(url, headers=headers, verify=False)\n        response.raise_for_status()\n    \n        access_control_allow_origin_header = response.headers.get(\"Access-Control-Allow-Origin\")\n        # If two headers are present (e.g * and *) response.headers.get(\"Access-Control-Allow-Origin\") returns \"*, *\"\n>       assert access_control_allow_origin_header == \"*\", \"There should be only one header with Access-Control-Allow-Origin\"\nE       AssertionError: There should be only one header with Access-Control-Allow-Origin\nE       assert None == '*'\n\ntests/00-georchestra-base/test_georchestra_headers.py:19: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1745930386574,"stop":1745930386574,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1745930386574,"stop":1745930386574,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1745930386576,"stop":1745930386576,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1745930386576,"stop":1745930386576,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[],"labels":[{"name":"epic","value":"Data API"},{"name":"feature","value":"Headers"},{"name":"parentSuite","value":"tests.00-georchestra-base"},{"name":"suite","value":"test_georchestra_headers"},{"name":"host","value":"fv-az1781-668"},{"name":"thread","value":"17732-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.00-georchestra-base.test_georchestra_headers"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"ec5160eefe149f28","status":"failed","statusDetails":"AssertionError: There should be only one header with Access-Control-Allow-Origin\nassert None == '*'","time":{"start":1745930808639,"stop":1745930809533,"duration":894}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":11,"unknown":0,"total":12},"items":[{"uid":"f1f410050ab33dbe","reportUrl":"https://georchestra.github.io/e2e-tests/111//#testresult/f1f410050ab33dbe","status":"passed","time":{"start":1745920871371,"stop":1745920871959,"duration":588}},{"uid":"40035ef715b64edf","reportUrl":"https://georchestra.github.io/e2e-tests/110//#testresult/40035ef715b64edf","status":"passed","time":{"start":1745919808640,"stop":1745919809234,"duration":594}},{"uid":"5fbb896484e104ea","reportUrl":"https://georchestra.github.io/e2e-tests/109//#testresult/5fbb896484e104ea","status":"passed","time":{"start":1745815158865,"stop":1745815160916,"duration":2051}},{"uid":"16fa7bbd5eb61f69","reportUrl":"https://georchestra.github.io/e2e-tests/108//#testresult/16fa7bbd5eb61f69","status":"passed","time":{"start":1745210267189,"stop":1745210267854,"duration":665}},{"uid":"61cdf4fd7207853b","reportUrl":"https://georchestra.github.io/e2e-tests/107//#testresult/61cdf4fd7207853b","status":"passed","time":{"start":1744605550232,"stop":1744605550636,"duration":404}},{"uid":"aab359bb9404d4e2","reportUrl":"https://georchestra.github.io/e2e-tests/106//#testresult/aab359bb9404d4e2","status":"passed","time":{"start":1744000613671,"stop":1744000614264,"duration":593}},{"uid":"eb9be469ba3777c5","reportUrl":"https://georchestra.github.io/e2e-tests/105//#testresult/eb9be469ba3777c5","status":"passed","time":{"start":1743395859788,"stop":1743395860382,"duration":594}},{"uid":"af1894a398f97edf","reportUrl":"https://georchestra.github.io/e2e-tests/104//#testresult/af1894a398f97edf","status":"passed","time":{"start":1742791097461,"stop":1742791099029,"duration":1568}},{"uid":"70ae9cf4304baca2","reportUrl":"https://georchestra.github.io/e2e-tests/103//#testresult/70ae9cf4304baca2","status":"passed","time":{"start":1742186196177,"stop":1742186196906,"duration":729}},{"uid":"c6f4fc7aaaf8501","reportUrl":"https://georchestra.github.io/e2e-tests/102//#testresult/c6f4fc7aaaf8501","status":"passed","time":{"start":1741959635503,"stop":1741959636074,"duration":571}},{"uid":"b86359f25d3c7b4","reportUrl":"https://georchestra.github.io/e2e-tests/100//#testresult/b86359f25d3c7b4","status":"passed","time":{"start":1741958988253,"stop":1741958988732,"duration":479}}]},"tags":[]},"source":"8f0d2762c1392488.json","parameterValues":[]}