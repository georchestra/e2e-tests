{"uid":"18fb769239a0c642","name":"Test the Datafeeder webapp and links","fullName":"tests.georchestra-base.test_ingest_data#test_import_shp_datafeeder","historyId":"a37b07ec0b274692badb0673e2a84f93","time":{"start":1739766729130,"stop":1739766789375,"duration":60245},"description":"This test attempts to load a SHP file through datafeeder and check links.","descriptionHtml":"<p>This test attempts to load a SHP file through datafeeder and check links.</p>\n","status":"failed","statusMessage":"AssertionError: Locator expected to be visible\nActual value: <element(s) not found> \nCall log:\n  - LocatorAssertions.to_be_visible with timeout 5000ms\n  -   - waiting for get_by_text(\"Awesome\").first","statusTrace":"page = <Page url='https://georchestra-127-0-0-1.nip.io/import/4beebfa1-cbb7-4cad-b96c-9a6e46764456/publishok'>\n\n    @allure.feature(\"geOrchestra\")\n    @allure.story(\"Datafeeder\")\n    @allure.description(\"This test attempts to load a SHP file through datafeeder and check links.\")\n    @allure.title(\"Test the Datafeeder webapp and links\")\n    @pytest.mark.skipif(condition=ConfigurationManager.write_tests_disabled(), reason=\"Write tests are disabled\")\n    def test_import_shp_datafeeder(page: Page):\n        login(page)\n        page.goto(\"/import/\")\n        screenshot_page(page, \"datafeeder\")\n        page.locator(\"input#undefined\").first.set_input_files(os.path.abspath(\"./fixtures/antenne.zip\"))\n        page.get_by_role(\"checkbox\").check()\n        page.get_by_role(\"button\", name=\"Upload\").click()\n        page.get_by_role(\"button\", name=\"-\", exact=True).click()\n        page.get_by_role(\"button\", name=\"WGS84\").click()\n        page.get_by_role(\"button\", name=\"WGS84\").click()\n        page.get_by_role(\"button\", name=\"Lambert\").click()\n        page.get_by_role(\"button\", name=\"OK, my data are correct\").click()\n        page.locator(\"input[type=\\\"text\\\"]\").click()\n        page.locator(\"input[type=\\\"text\\\"]\").fill(\"Antennes\")\n        page.locator(\"textarea[name=\\\"textArea\\\"]\").click()\n        page.locator(\"textarea[name=\\\"textArea\\\"]\").fill(\"Awesome\")\n        page.get_by_role(\"button\", name=\"next\").click()\n        page.get_by_role(\"textbox\").fill(\"a\")\n        page.locator(\"#tags div\").nth(1).click()\n        page.get_by_role(\"button\", name=\"Addresses\").click()\n        page.get_by_role(\"button\", name=\"next\").click()\n        page.get_by_role(\"button\", name=\"next\").click()\n        page.get_by_role(\"textbox\").click()\n        page.get_by_role(\"textbox\").fill(\"This is the process\")\n        page.get_by_role(\"button\", name=\"next\").click()\n        page.get_by_role(\"button\", name=\"Submit\").click()\n        screenshot_page(page, \"after-submit-click\")\n        # wait for the data to be ingested\n        page.wait_for_timeout(30000)\n        screenshot_page(page, \"after-ingestion\")\n        expect(page.get_by_role(\"button\", name=\"Metadata record\")).to_be_visible(timeout=15000)\n        expect(page.get_by_role(\"button\", name=\"Map viewer\")).to_be_visible()\n        with page.expect_popup() as page1_info:\n            page.get_by_role(\"button\", name=\"Metadata record\").click()\n        page1 = page1_info.value\n        page.wait_for_timeout(10000)\n        screenshot_page(page1, \"metadata\")\n>       expect(page1.get_by_text(\"Awesome\").first).to_be_visible()\nE       AssertionError: Locator expected to be visible\nE       Actual value: <element(s) not found> \nE       Call log:\nE         - LocatorAssertions.to_be_visible with timeout 5000ms\nE         -   - waiting for get_by_text(\"Awesome\").first\n\ntests/georchestra-base/test_ingest_data.py:51: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"delete_output_dir","time":{"start":1739766554337,"stop":1739766554337,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"base_url","time":{"start":1739766554337,"stop":1739766554337,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"pytestconfig","time":{"start":1739766554337,"stop":1739766554337,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"_verify_url","time":{"start":1739766554337,"stop":1739766554338,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"playwright","time":{"start":1739766554338,"stop":1739766554880,"duration":542},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"browser_type_launch_args","time":{"start":1739766554338,"stop":1739766554338,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"browser_type","time":{"start":1739766554880,"stop":1739766554880,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"launch_browser","time":{"start":1739766554880,"stop":1739766554880,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"browser","time":{"start":1739766554880,"stop":1739766557227,"duration":2347},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"connect_options","time":{"start":1739766554880,"stop":1739766554880,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"_pw_artifacts_folder","time":{"start":1739766557227,"stop":1739766557227,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"browser_context_args","time":{"start":1739766557227,"stop":1739766557228,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"browser_context_args","time":{"start":1739766557227,"stop":1739766557227,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"device","time":{"start":1739766557227,"stop":1739766557227,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"output_path","time":{"start":1739766729040,"stop":1739766729040,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"_artifacts_recorder","time":{"start":1739766729040,"stop":1739766729040,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"new_context","time":{"start":1739766729041,"stop":1739766729041,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"context","time":{"start":1739766729044,"stop":1739766729075,"duration":31},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"page","time":{"start":1739766729075,"stop":1739766729129,"duration":54},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0}],"testStage":{"description":"This test attempts to load a SHP file through datafeeder and check links.","status":"failed","statusMessage":"AssertionError: Locator expected to be visible\nActual value: <element(s) not found> \nCall log:\n  - LocatorAssertions.to_be_visible with timeout 5000ms\n  -   - waiting for get_by_text(\"Awesome\").first","statusTrace":"page = <Page url='https://georchestra-127-0-0-1.nip.io/import/4beebfa1-cbb7-4cad-b96c-9a6e46764456/publishok'>\n\n    @allure.feature(\"geOrchestra\")\n    @allure.story(\"Datafeeder\")\n    @allure.description(\"This test attempts to load a SHP file through datafeeder and check links.\")\n    @allure.title(\"Test the Datafeeder webapp and links\")\n    @pytest.mark.skipif(condition=ConfigurationManager.write_tests_disabled(), reason=\"Write tests are disabled\")\n    def test_import_shp_datafeeder(page: Page):\n        login(page)\n        page.goto(\"/import/\")\n        screenshot_page(page, \"datafeeder\")\n        page.locator(\"input#undefined\").first.set_input_files(os.path.abspath(\"./fixtures/antenne.zip\"))\n        page.get_by_role(\"checkbox\").check()\n        page.get_by_role(\"button\", name=\"Upload\").click()\n        page.get_by_role(\"button\", name=\"-\", exact=True).click()\n        page.get_by_role(\"button\", name=\"WGS84\").click()\n        page.get_by_role(\"button\", name=\"WGS84\").click()\n        page.get_by_role(\"button\", name=\"Lambert\").click()\n        page.get_by_role(\"button\", name=\"OK, my data are correct\").click()\n        page.locator(\"input[type=\\\"text\\\"]\").click()\n        page.locator(\"input[type=\\\"text\\\"]\").fill(\"Antennes\")\n        page.locator(\"textarea[name=\\\"textArea\\\"]\").click()\n        page.locator(\"textarea[name=\\\"textArea\\\"]\").fill(\"Awesome\")\n        page.get_by_role(\"button\", name=\"next\").click()\n        page.get_by_role(\"textbox\").fill(\"a\")\n        page.locator(\"#tags div\").nth(1).click()\n        page.get_by_role(\"button\", name=\"Addresses\").click()\n        page.get_by_role(\"button\", name=\"next\").click()\n        page.get_by_role(\"button\", name=\"next\").click()\n        page.get_by_role(\"textbox\").click()\n        page.get_by_role(\"textbox\").fill(\"This is the process\")\n        page.get_by_role(\"button\", name=\"next\").click()\n        page.get_by_role(\"button\", name=\"Submit\").click()\n        screenshot_page(page, \"after-submit-click\")\n        # wait for the data to be ingested\n        page.wait_for_timeout(30000)\n        screenshot_page(page, \"after-ingestion\")\n        expect(page.get_by_role(\"button\", name=\"Metadata record\")).to_be_visible(timeout=15000)\n        expect(page.get_by_role(\"button\", name=\"Map viewer\")).to_be_visible()\n        with page.expect_popup() as page1_info:\n            page.get_by_role(\"button\", name=\"Metadata record\").click()\n        page1 = page1_info.value\n        page.wait_for_timeout(10000)\n        screenshot_page(page1, \"metadata\")\n>       expect(page1.get_by_text(\"Awesome\").first).to_be_visible()\nE       AssertionError: Locator expected to be visible\nE       Actual value: <element(s) not found> \nE       Call log:\nE         - LocatorAssertions.to_be_visible with timeout 5000ms\nE         -   - waiting for get_by_text(\"Awesome\").first\n\ntests/georchestra-base/test_ingest_data.py:51: AssertionError","steps":[],"attachments":[{"uid":"7d2c28989cf593fe","name":"datafeeder","source":"7d2c28989cf593fe.png","type":"image/png","size":259316},{"uid":"56af3a4ca07af55c","name":"after-submit-click","source":"56af3a4ca07af55c.png","type":"image/png","size":321691},{"uid":"be750ac8440ad4a6","name":"after-ingestion","source":"be750ac8440ad4a6.png","type":"image/png","size":77940},{"uid":"bfc2045942e4a481","name":"metadata","source":"bfc2045942e4a481.png","type":"image/png","size":18631}],"parameters":[],"attachmentsCount":4,"hasContent":true,"shouldDisplayMessage":true,"stepsCount":0},"afterStages":[{"name":"new_context::0","time":{"start":1739766789382,"stop":1739766790106,"duration":724},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"_artifacts_recorder::0","time":{"start":1739766790107,"stop":1739766790107,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"_pw_artifacts_folder::0","time":{"start":1739766823422,"stop":1739766823422,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"browser::0","time":{"start":1739766823429,"stop":1739766823803,"duration":374},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"playwright::0","time":{"start":1739766823805,"stop":1739766823823,"duration":18},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0}],"labels":[{"name":"feature","value":"geOrchestra"},{"name":"story","value":"Datafeeder"},{"name":"tag","value":"@pytest.mark.skipif(condition=False, reason='Write tests are disabled')"},{"name":"parentSuite","value":"tests.georchestra-base"},{"name":"suite","value":"test_ingest_data"},{"name":"host","value":"fv-az1075-605"},{"name":"thread","value":"16710-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.georchestra-base.test_ingest_data"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"browser_name","value":"'chromium'"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["@pytest.mark.skipif(condition=False, reason='Write tests are disabled')"]},"source":"18fb769239a0c642.json","parameterValues":["'chromium'"]}