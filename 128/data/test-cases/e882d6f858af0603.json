{"uid":"e882d6f858af0603","name":"test_change_mail_and_password[chromium]","fullName":"tests.console.test_console#test_change_mail_and_password","historyId":"01ddf5a2db0118ae962f74d02801a926","time":{"start":1747404776549,"stop":1747404818460,"duration":41911},"description":"This test attempts to change Bob Dylan's informations.","descriptionHtml":"<p>This test attempts to change Bob Dylan's informations.</p>\n","status":"broken","statusMessage":"playwright._impl._errors.TimeoutError: Locator.click: Timeout 30000ms exceeded.\nCall log:\n  - waiting for get_by_role(\"link\", name=\"[geOrchestra] Update your e-\")","statusTrace":"page = <Page url='https://georchestra-127-0-0-1.nip.io/console/account/changeEmail'>\ncontext = <BrowserContext browser=<Browser type=<BrowserType name=chromium executable_path=/home/runner/.cache/ms-playwright/chromium-1169/chrome-linux/chrome> version=136.0.7103.25>>\n\n    @allure.epic(\"Console\")\n    @allure.feature(\"User informations change\")\n    @allure.description(\"This test attempts to change Bob Dylan's informations.\")\n    @pytest.mark.skipif(condition=ConfigurationManager.write_tests_disabled(), reason=\"Write tests are disabled\")\n    @pytest.mark.flaky(reruns=0)\n    def test_change_mail_and_password(page: Page, context: BrowserContext):\n        login(page, username=\"bdylan\", password=\"azerty123456\")\n        expect(page.get_by_role(\"link\", name=\"Bob Dylan\")).to_be_visible()\n        screenshot_page(page, \"bob-dylan-login\")\n        page.get_by_role(\"link\", name=\"Bob Dylan\").click()\n        expect(page.get_by_text(\"bob@dylan.com\")).to_be_visible()\n        page.get_by_role(\"link\", name=\"Change Password\").click()\n        page.get_by_placeholder(\"Password\", exact=True).click()\n        page.get_by_placeholder(\"Password\", exact=True).fill(\"bdylan123456\")\n        page.get_by_placeholder(\"Confirm password\").click()\n        page.get_by_placeholder(\"Confirm password\").fill(\"bdylan123456\")\n        page.get_by_role(\"button\", name=\"Submit\").click()\n        screenshot_page(page, \"change-password\")\n        expect(page.get_by_text(\"Password updated successfully\")).to_be_visible()\n        page.get_by_role(\"link\", name=\"Bob Dylan\").click()\n        page.get_by_role(\"link\", name=\"Change e-mail\").click()\n        page.get_by_label(\"E-mail *\").click()\n        page.get_by_label(\"E-mail *\").fill(\"bob.d@mymail.com\")\n        page.get_by_role(\"button\", name=\"Submit\").click()\n        screenshot_page(page, \"change-email\")\n        page1 = context.new_page()\n        page1.goto(\"/webmail/?_task=mail&_mbox=INBOX\")\n        page1.get_by_role(\"link\", name=\"Inbox\").click()\n        screenshot_page(page1, \"webmail\")\n>       page1.get_by_role(\"link\", name=\"[geOrchestra] Update your e-\").click()\n\ntests/console/test_console.py:86: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/playwright/sync_api/_generated.py:15512: in click\n    self._sync(\n/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/playwright/_impl/_locator.py:160: in click\n    return await self._frame.click(self._selector, strict=True, **params)\n/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/playwright/_impl/_frame.py:488: in click\n    await self._channel.send(\"click\", locals_to_params(locals()))\n/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/playwright/_impl/_connection.py:61: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._connection.Connection object at 0x7fc59234c210>\ncb = <function Channel.send.<locals>.<lambda> at 0x7fc58f4fede0>\nis_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Locator.click: Timeout 30000ms exceeded.\nE           Call log:\nE             - waiting for get_by_role(\"link\", name=\"[geOrchestra] Update your e-\")\n\n/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/playwright/_impl/_connection.py:528: TimeoutError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1747404609812,"stop":1747404609812,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1747404609812,"stop":1747404609812,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1747404609812,"stop":1747404609812,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"playwright","time":{"start":1747404609812,"stop":1747404610634,"duration":822},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"browser_type_launch_args","time":{"start":1747404609812,"stop":1747404609812,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1747404609812,"stop":1747404609812,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"connect_options","time":{"start":1747404610634,"stop":1747404610634,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"browser_type","time":{"start":1747404610634,"stop":1747404610634,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"launch_browser","time":{"start":1747404610634,"stop":1747404610634,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"browser","time":{"start":1747404610635,"stop":1747404613580,"duration":2945},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"browser_context_args","time":{"start":1747404613580,"stop":1747404613580,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"device","time":{"start":1747404613580,"stop":1747404613580,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"browser_context_args","time":{"start":1747404613580,"stop":1747404613580,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_pw_artifacts_folder","time":{"start":1747404613580,"stop":1747404613580,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"new_context","time":{"start":1747404776469,"stop":1747404776469,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"output_path","time":{"start":1747404776469,"stop":1747404776469,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"context","time":{"start":1747404776469,"stop":1747404776496,"duration":27},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_artifacts_recorder","time":{"start":1747404776469,"stop":1747404776469,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"page","time":{"start":1747404776496,"stop":1747404776548,"duration":52},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"This test attempts to change Bob Dylan's informations.","status":"broken","statusMessage":"playwright._impl._errors.TimeoutError: Locator.click: Timeout 30000ms exceeded.\nCall log:\n  - waiting for get_by_role(\"link\", name=\"[geOrchestra] Update your e-\")","statusTrace":"page = <Page url='https://georchestra-127-0-0-1.nip.io/console/account/changeEmail'>\ncontext = <BrowserContext browser=<Browser type=<BrowserType name=chromium executable_path=/home/runner/.cache/ms-playwright/chromium-1169/chrome-linux/chrome> version=136.0.7103.25>>\n\n    @allure.epic(\"Console\")\n    @allure.feature(\"User informations change\")\n    @allure.description(\"This test attempts to change Bob Dylan's informations.\")\n    @pytest.mark.skipif(condition=ConfigurationManager.write_tests_disabled(), reason=\"Write tests are disabled\")\n    @pytest.mark.flaky(reruns=0)\n    def test_change_mail_and_password(page: Page, context: BrowserContext):\n        login(page, username=\"bdylan\", password=\"azerty123456\")\n        expect(page.get_by_role(\"link\", name=\"Bob Dylan\")).to_be_visible()\n        screenshot_page(page, \"bob-dylan-login\")\n        page.get_by_role(\"link\", name=\"Bob Dylan\").click()\n        expect(page.get_by_text(\"bob@dylan.com\")).to_be_visible()\n        page.get_by_role(\"link\", name=\"Change Password\").click()\n        page.get_by_placeholder(\"Password\", exact=True).click()\n        page.get_by_placeholder(\"Password\", exact=True).fill(\"bdylan123456\")\n        page.get_by_placeholder(\"Confirm password\").click()\n        page.get_by_placeholder(\"Confirm password\").fill(\"bdylan123456\")\n        page.get_by_role(\"button\", name=\"Submit\").click()\n        screenshot_page(page, \"change-password\")\n        expect(page.get_by_text(\"Password updated successfully\")).to_be_visible()\n        page.get_by_role(\"link\", name=\"Bob Dylan\").click()\n        page.get_by_role(\"link\", name=\"Change e-mail\").click()\n        page.get_by_label(\"E-mail *\").click()\n        page.get_by_label(\"E-mail *\").fill(\"bob.d@mymail.com\")\n        page.get_by_role(\"button\", name=\"Submit\").click()\n        screenshot_page(page, \"change-email\")\n        page1 = context.new_page()\n        page1.goto(\"/webmail/?_task=mail&_mbox=INBOX\")\n        page1.get_by_role(\"link\", name=\"Inbox\").click()\n        screenshot_page(page1, \"webmail\")\n>       page1.get_by_role(\"link\", name=\"[geOrchestra] Update your e-\").click()\n\ntests/console/test_console.py:86: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/playwright/sync_api/_generated.py:15512: in click\n    self._sync(\n/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/playwright/_impl/_locator.py:160: in click\n    return await self._frame.click(self._selector, strict=True, **params)\n/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/playwright/_impl/_frame.py:488: in click\n    await self._channel.send(\"click\", locals_to_params(locals()))\n/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/playwright/_impl/_connection.py:61: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._connection.Connection object at 0x7fc59234c210>\ncb = <function Channel.send.<locals>.<lambda> at 0x7fc58f4fede0>\nis_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Locator.click: Timeout 30000ms exceeded.\nE           Call log:\nE             - waiting for get_by_role(\"link\", name=\"[geOrchestra] Update your e-\")\n\n/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/playwright/_impl/_connection.py:528: TimeoutError","steps":[],"attachments":[{"uid":"6dbdbd558d8add77","name":"bob-dylan-login","source":"6dbdbd558d8add77.png","type":"image/png","size":182810},{"uid":"df1b3fe9a7d9341f","name":"change-password","source":"df1b3fe9a7d9341f.png","type":"image/png","size":48614},{"uid":"13766da3df493109","name":"change-email","source":"13766da3df493109.png","type":"image/png","size":31703},{"uid":"d28a9cd910ff7df8","name":"webmail","source":"d28a9cd910ff7df8.png","type":"image/png","size":51286}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":4,"hasContent":true},"afterStages":[{"name":"new_context::0","time":{"start":1747404818722,"stop":1747404819065,"duration":343},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_artifacts_recorder::0","time":{"start":1747404819066,"stop":1747404819066,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_pw_artifacts_folder::0","time":{"start":1747405185802,"stop":1747405185802,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"browser::0","time":{"start":1747405185803,"stop":1747405186149,"duration":346},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"playwright::0","time":{"start":1747405186151,"stop":1747405186184,"duration":33},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"feature","value":"User informations change"},{"name":"epic","value":"Console"},{"name":"tag","value":"flaky(reruns=0)"},{"name":"tag","value":"@pytest.mark.skipif(condition=False, reason='Write tests are disabled')"},{"name":"parentSuite","value":"tests.console"},{"name":"suite","value":"test_console"},{"name":"host","value":"pkrvmberfyhpb9w"},{"name":"thread","value":"18507-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.console.test_console"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"browser_name","value":"'chromium'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":9,"unknown":0,"total":11},"items":[{"uid":"8c72fd4677e35a1a","reportUrl":"https://georchestra.github.io/e2e-tests/129//#testresult/8c72fd4677e35a1a","status":"passed","time":{"start":1747404717355,"stop":1747404733643,"duration":16288}},{"uid":"c2a125e31372de0d","reportUrl":"https://georchestra.github.io/e2e-tests/127//#testresult/c2a125e31372de0d","status":"passed","time":{"start":1747404656680,"stop":1747404671463,"duration":14783}},{"uid":"49ceed156c2c7e99","reportUrl":"https://georchestra.github.io/e2e-tests/126//#testresult/49ceed156c2c7e99","status":"passed","time":{"start":1747403502735,"stop":1747403516965,"duration":14230}},{"uid":"85ce9d1a03373d39","reportUrl":"https://georchestra.github.io/e2e-tests/125//#testresult/85ce9d1a03373d39","status":"passed","time":{"start":1747227775463,"stop":1747227789643,"duration":14180}},{"uid":"31933898914e79aa","reportUrl":"https://georchestra.github.io/e2e-tests/124//#testresult/31933898914e79aa","status":"passed","time":{"start":1747226340744,"stop":1747226353262,"duration":12518}},{"uid":"90bf323844e4655","reportUrl":"https://georchestra.github.io/e2e-tests/123//#testresult/90bf323844e4655","status":"passed","time":{"start":1747224911422,"stop":1747224924455,"duration":13033}},{"uid":"64e80b331457583c","reportUrl":"https://georchestra.github.io/e2e-tests/122//#testresult/64e80b331457583c","status":"passed","time":{"start":1747224831448,"stop":1747224846214,"duration":14766}},{"uid":"1a84b5e2f405b18f","reportUrl":"https://georchestra.github.io/e2e-tests/121//#testresult/1a84b5e2f405b18f","status":"broken","statusDetails":"playwright._impl._errors.TimeoutError: Locator.click: Timeout 30000ms exceeded.\nCall log:\n  - waiting for get_by_role(\"link\", name=\"login\")","time":{"start":1747223577051,"stop":1747223607631,"duration":30580}},{"uid":"62e25d960724e1f0","reportUrl":"https://georchestra.github.io/e2e-tests/120//#testresult/62e25d960724e1f0","status":"passed","time":{"start":1747216444842,"stop":1747216457980,"duration":13138}},{"uid":"6a92685473e3b339","reportUrl":"https://georchestra.github.io/e2e-tests/119//#testresult/6a92685473e3b339","status":"passed","time":{"start":1747214923198,"stop":1747214937566,"duration":14368}}]},"tags":["flaky(reruns=0)","@pytest.mark.skipif(condition=False, reason='Write tests are disabled')"]},"source":"e882d6f858af0603.json","parameterValues":["'chromium'"]}